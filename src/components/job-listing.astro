---
import { Link } from "./link";
import { compositionCss } from "../styles/composition.css";
import { stackCss } from "../styles/spacing.css";
import { textCss } from "../styles/text.css";
import { metadataCss, metadataItemCss } from "./job-listing.css";

export interface Props {
  jobTitle: string;
  timeAtJob: string;
  companyName: string;
  companyTagline: string;
  companyUrl?: string;
}
const props = Astro.props as Props;
---

<article class={stackCss({ gap: "l" })}>
  <header class={stackCss({ gap: "m" })}>
    <hgroup class={stackCss({ gap: "s" })}>
      <h3 class={textCss({ size: "m", weight: "bold" })}>
        {
          props.companyUrl ? (
            <Link href={props.companyUrl}>{props.companyName}</Link>
          ) : (
            props.companyName
          )
        }
      </h3>
      <h4>{props.companyTagline}</h4>
    </hgroup>
    <dl class={metadataCss}>
      {
        [
          { dt: "Title", dd: props.jobTitle },
          { dt: "Time", dd: props.timeAtJob },
        ].map(({ dt, dd }) => (
          <div class={metadataItemCss}>
            <dt class={textCss({ weight: "bold" })}>{dt}</dt>
            <dd>{dd}</dd>
          </div>
        ))
      }
    </dl>
  </header>
  <section class={compositionCss}><slot /></section>
</article>
